Category:
  options:
    table: categories
    timestampable: true
    sluggable: title
  fields:
    id					: {type: primary, strategy: identity}
    title				: {type: title, length: 255, notnull: true}

Group:
  options:
    table: groups
  fields:
    id                  : {type: primary, strategy: identity}
    name                : {type: string, length: 255}
    description         : {type: note, length: 500}

Model:
  options:
    table: models
    timestampable: true
    sluggable: title
  fields:
    id					: {type: primary, strategy: identity}
    title				: {type: string, length: 255, notnull: true}
    sequence		    : {type: integer, length: 5, notnull: false}
    first_name			: {type: name, length: 30}
    email				: {type: email, length: 50, unique: true}
    login				: {type: login, length: 100, unique: true}
    password			: {type: password, length: 50, unique: true}
    url					: {type: url, length: 50}
    description		    : {type: editor, notnull: false}
    address			    : {type: note, length: 2000}
    price				: {type: decimal, precision: 10, scale: 2}
    birthday   			: {type: date}
    period			    : {type: datetime}
    hour                : {type: time, notnull: true}
    type				: {type: options, values: {admin: Admin, normal: Normal}, default: admin, notnull: false}
    file				: {type: file, length: 50, size: 1000, ext: [jpg]}
    avatar:
      type: image
      length: 50
      size: 1000
      ext: [png, jpg]
      min_dimensions: [120, 120]
      max_dimensions: [2000, 2000]
      copys:
        - {width: 400, height: 200, method: crop, dir: / }
    category:
      type: foreign
      model: Category
      join: { name: "category_id", foreignField: "id" }
      relation: "many-to-one"
    groups:
      type: table
      model: Group
      joinTable:
        name: "pages_groups"
        join:		{ name: "model_id", foreignField: "id"}
        inverseJoin : { name: "group_id", foreignField: "id"}
      relation: "many-to-many"
    parent:
      type: foreign
      model: Model
      join: { name: "parent_id", foreignField : "id" }
      relation: "many-to-one-self-referencing"
      nullable: yes